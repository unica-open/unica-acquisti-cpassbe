/*-
 * ========================LICENSE_START=================================
 * CPASS BackEnd - EJB submodule
 * %%
 * Copyright (C) 2019 - 2025 CSI Piemonte
 * %%
 * SPDX-FileCopyrightText: Copyright 2019 - 2020 | CSI Piemonte
 * SPDX-License-Identifier: EUPL-1.2
 * =========================LICENSE_END==================================
 */
/**
 * WSProgrammi
 * Servizio di pubblicazione programmazione lavori, beni e servizi
 *
 * OpenAPI spec version: 2.1.0
 *
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */


package it.csi.cpass.cpassbe.mit.client.model.programmi;

import java.util.Objects;

import com.google.gson.annotations.SerializedName;

import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;


/**
 * Contenitore per dati di un immobile
 */
@ApiModel(description = "Contenitore per dati di un immobile")
@javax.annotation.Generated(value = "class io.swagger.codegen.languages.JavaClientCodegen", date = "2020-03-26T12:24:42.165+01:00")
public class ImmobileDM112011Entry   {
	@SerializedName("descrizione")
	private String descrizione = null;

	@SerializedName("tipoProprieta")
	private Long tipoProprieta = null;

	@SerializedName("valoreStimato")
	private Double valoreStimato = null;

	public ImmobileDM112011Entry descrizione(String descrizione) {
		this.descrizione = descrizione;
		return this;
	}

	/**
	 * Descrizione dell'immobile
	 * @return descrizione
	 **/
	@ApiModelProperty(example = "null", value = "Descrizione dell'immobile")
	public String getDescrizione() {
		return descrizione;
	}

	public void setDescrizione(String descrizione) {
		this.descrizione = descrizione;
	}

	public ImmobileDM112011Entry tipoProprieta(Long tipoProprieta) {
		this.tipoProprieta = tipoProprieta;
		return this;
	}

	/**
	 * Tipo propriet� (/WSTabelleDiContesto/rest/Tabellati/Valori?cod=TipoProprieta)
	 * @return tipoProprieta
	 **/
	@ApiModelProperty(example = "null", value = "Tipo propriet� (/WSTabelleDiContesto/rest/Tabellati/Valori?cod=TipoProprieta)")
	public Long getTipoProprieta() {
		return tipoProprieta;
	}

	public void setTipoProprieta(Long tipoProprieta) {
		this.tipoProprieta = tipoProprieta;
	}

	public ImmobileDM112011Entry valoreStimato(Double valoreStimato) {
		this.valoreStimato = valoreStimato;
		return this;
	}

	/**
	 * Valore stimato dell'immobile
	 * @return valoreStimato
	 **/
	@ApiModelProperty(example = "null", value = "Valore stimato dell'immobile")
	public Double getValoreStimato() {
		return valoreStimato;
	}

	public void setValoreStimato(Double valoreStimato) {
		this.valoreStimato = valoreStimato;
	}


	@Override
	public boolean equals(java.lang.Object o) {
		if (this == o) {
			return true;
		}
		if (o == null || getClass() != o.getClass()) {
			return false;
		}
		final ImmobileDM112011Entry immobileDM112011Entry = (ImmobileDM112011Entry) o;
		return Objects.equals(this.descrizione, immobileDM112011Entry.descrizione) &&
				Objects.equals(this.tipoProprieta, immobileDM112011Entry.tipoProprieta) &&
				Objects.equals(this.valoreStimato, immobileDM112011Entry.valoreStimato);
	}

	@Override
	public int hashCode() {
		return Objects.hash(descrizione, tipoProprieta, valoreStimato);
	}

	@Override
	public String toString() {
		final StringBuilder sb = new StringBuilder();
		sb.append("class ImmobileDM112011Entry {\n");

		sb.append("    descrizione: ").append(toIndentedString(descrizione)).append("\n");
		sb.append("    tipoProprieta: ").append(toIndentedString(tipoProprieta)).append("\n");
		sb.append("    valoreStimato: ").append(toIndentedString(valoreStimato)).append("\n");
		sb.append("}");
		return sb.toString();
	}

	/**
	 * Convert the given object to string with each line indented by 4 spaces
	 * (except the first line).
	 */
	private String toIndentedString(java.lang.Object o) {
		if (o == null) {
			return "null";
		}
		return o.toString().replace("\n", "\n    ");
	}
}

