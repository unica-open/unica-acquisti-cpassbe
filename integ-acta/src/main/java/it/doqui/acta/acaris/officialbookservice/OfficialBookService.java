/*-
 * ========================LICENSE_START=================================
 * CPASS BackEnd - INTEGRATION submodule - ACTA
 * %%
 * Copyright (C) 2019 - 2023 CSI Piemonte
 * %%
 * SPDX-FileCopyrightText: Copyright 2019 - 2023 | CSI Piemonte
 * SPDX-License-Identifier: EUPL-1.2
 * =========================LICENSE_END==================================
 */

package it.doqui.acta.acaris.officialbookservice;

import java.net.URL;

import javax.xml.namespace.QName;
import javax.xml.ws.Service;
import javax.xml.ws.WebEndpoint;
import javax.xml.ws.WebServiceClient;
import javax.xml.ws.WebServiceException;
import javax.xml.ws.WebServiceFeature;


/**
 * This class was generated by the JAX-WS RI.
 * JAX-WS RI 2.3.3
 * Generated source version: 2.2
 * 
 */
@WebServiceClient(name = "OfficialBookService", targetNamespace = "officialbookservice.acaris.acta.doqui.it", wsdlLocation = "/wsdl/officialbookWS.wsdl")
public class OfficialBookService
    extends Service
{

    private final static URL OFFICIALBOOKSERVICE_WSDL_LOCATION;
    private final static WebServiceException OFFICIALBOOKSERVICE_EXCEPTION;
    private final static QName OFFICIALBOOKSERVICE_QNAME = new QName("officialbookservice.acaris.acta.doqui.it", "OfficialBookService");

    static {
        OFFICIALBOOKSERVICE_WSDL_LOCATION = it.doqui.acta.acaris.officialbookservice.OfficialBookService.class.getResource("/wsdl/officialbookWS.wsdl");
        WebServiceException e = null;
        if (OFFICIALBOOKSERVICE_WSDL_LOCATION == null) {
            e = new WebServiceException("Cannot find '/wsdl/officialbookWS.wsdl' wsdl. Place the resource correctly in the classpath.");
        }
        OFFICIALBOOKSERVICE_EXCEPTION = e;
    }

    public OfficialBookService() {
        super(__getWsdlLocation(), OFFICIALBOOKSERVICE_QNAME);
    }

    public OfficialBookService(WebServiceFeature... features) {
        super(__getWsdlLocation(), OFFICIALBOOKSERVICE_QNAME, features);
    }

    public OfficialBookService(URL wsdlLocation) {
        super(wsdlLocation, OFFICIALBOOKSERVICE_QNAME);
    }

    public OfficialBookService(URL wsdlLocation, WebServiceFeature... features) {
        super(wsdlLocation, OFFICIALBOOKSERVICE_QNAME, features);
    }

    public OfficialBookService(URL wsdlLocation, QName serviceName) {
        super(wsdlLocation, serviceName);
    }

    public OfficialBookService(URL wsdlLocation, QName serviceName, WebServiceFeature... features) {
        super(wsdlLocation, serviceName, features);
    }

    /**
     * 
     * @return
     *     returns OfficialBookServicePort
     */
    @WebEndpoint(name = "OfficialBookServicePort")
    public OfficialBookServicePort getOfficialBookServicePort() {
        return super.getPort(new QName("officialbookservice.acaris.acta.doqui.it", "OfficialBookServicePort"), OfficialBookServicePort.class);
    }

    /**
     * 
     * @param features
     *     A list of {&#064;link javax.xml.ws.WebServiceFeature} to configure on the proxy.  Supported features not in the &lt;code&gt;features&lt;/code&gt; parameter will have their default values.
     * @return
     *     returns OfficialBookServicePort
     */
    @WebEndpoint(name = "OfficialBookServicePort")
    public OfficialBookServicePort getOfficialBookServicePort(WebServiceFeature... features) {
        return super.getPort(new QName("officialbookservice.acaris.acta.doqui.it", "OfficialBookServicePort"), OfficialBookServicePort.class, features);
    }

    private static URL __getWsdlLocation() {
        if (OFFICIALBOOKSERVICE_EXCEPTION!= null) {
            throw OFFICIALBOOKSERVICE_EXCEPTION;
        }
        return OFFICIALBOOKSERVICE_WSDL_LOCATION;
    }

}
