<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/maven-v4_0_0.xsd">
  <modelVersion>4.0.0</modelVersion>

  <groupId>it.csi.cpass</groupId>
  <artifactId>cpassbe</artifactId>
  <version>${revision}</version>
  <packaging>pom</packaging>

  <name>CPASS BackEnd</name>
  <inceptionYear>2019</inceptionYear>
  <organization>
    <name>CSI Piemonte</name>
    <url>https://www.csipiemonte.it</url>
  </organization>
  <licenses>
    <license>
      <name>EUPL 1.2</name>
      <url>https://joinup.ec.europa.eu/sites/default/files/custom-page/attachment/2020-03/EUPL-1.2%20EN.txt</url>
      <distribution>repo</distribution>
    </license>
  </licenses>

  <properties>
    <!-- Modules version -->
    <revision>1.0.0</revision>

    <project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
    <!-- Compiler configuration -->
    <maven.compiler.target>11</maven.compiler.target>
    <maven.compiler.source>11</maven.compiler.source>

    <!-- Configuration for the remote repository -->
    <repository.url>http://repart.csi.it/artifactory/maven2</repository.url>

    <!-- Dependencies configuration -->
    <dependencies.version.commons-lang>2.6</dependencies.version.commons-lang>
    <dependencies.version.commons-text>1.8</dependencies.version.commons-text>
    <dependencies.version.gson>2.8.1</dependencies.version.gson>
    <dependencies.version.gson-fire>1.8.0</dependencies.version.gson-fire>
    <dependencies.version.javax-cache-api>1.0.0</dependencies.version.javax-cache-api>
    <dependencies.version.jaxb-api>2.3.1</dependencies.version.jaxb-api>
    <dependencies.version.jaxws-api>2.3.1</dependencies.version.jaxws-api>
    <dependencies.version.jboss.bom>17.0.0.Final</dependencies.version.jboss.bom>
    <dependencies.version.jee>8.0.1</dependencies.version.jee>
    <dependencies.version.joda-time>2.3</dependencies.version.joda-time>
    <dependencies.version.jws-api>1.1</dependencies.version.jws-api>
    <dependencies.version.log4j>2.13.3</dependencies.version.log4j>
    <dependencies.version.mapstruct>1.4.1.Final</dependencies.version.mapstruct>
    <dependencies.version.okhttp>2.7.5</dependencies.version.okhttp>
    <dependencies.version.postgresql>9.4-1201-jdbc4</dependencies.version.postgresql>
    <dependencies.version.shrinkwrap-resolver-bom>2.1.1</dependencies.version.shrinkwrap-resolver-bom>
    <dependencies.version.swagger-core>1.5.18</dependencies.version.swagger-core>
    <dependencies.version.threetenbp>1.3.5</dependencies.version.threetenbp>
    <dependencies.version.httpclient>4.5.12</dependencies.version.httpclient>

    <!-- Module configuration -->
    <module.ear.context-root.angular>/cpass</module.ear.context-root.angular>
    <module.ear.context-root.rest>/rest</module.ear.context-root.rest>

    <!-- Plugin configuration -->
    <plugin.version.assembly>3.3.0</plugin.version.assembly>
    <plugin.version.build-helper>3.1.0</plugin.version.build-helper>
    <plugin.version.bom-builder>1.2.0</plugin.version.bom-builder>
    <plugin.version.clean>3.1.0</plugin.version.clean>
    <plugin.version.compiler>3.8.0</plugin.version.compiler>
    <plugin.version.ear>3.0.1</plugin.version.ear>
    <plugin.version.ejb>3.0.0</plugin.version.ejb>
    <plugin.version.failsafe>2.22.1</plugin.version.failsafe>
    <plugin.version.jar>3.2.0</plugin.version.jar>
    <plugin.version.jaxws>2.3.3</plugin.version.jaxws>
    <plugin.version.license>2.0.0</plugin.version.license>
    <plugin.version.owasp.dependency-check>6.0.2</plugin.version.owasp.dependency-check>
    <plugin.version.surefire>2.22.1</plugin.version.surefire>
    <plugin.version.war>3.2.2</plugin.version.war>
    <plugin.version.wildfly.maven>2.0.0.Final</plugin.version.wildfly.maven>
    <plugin.version.xjc>3.3.0</plugin.version.xjc>
  </properties>

  <modules>
    <module>lib</module>
    <module>integ-siac</module>
    <module>integ-stilo</module>
    <module>integ-notier</module>
    <module>ejb</module>
    <module>web</module>
    <module>angular</module>
    <module>ear</module>
    <module>tar</module>
  </modules>

  <dependencyManagement>
    <dependencies>

      <!-- Define the version of the jars so that we don't need to repeat ourselves in every module -->
      <dependency>
        <groupId>${project.groupId}</groupId>
        <artifactId>cpassbe-lib</artifactId>
        <version>${revision}</version>
        <type>jar</type>
      </dependency>
      <dependency>
        <groupId>${project.groupId}</groupId>
        <artifactId>cpassbe-integ-siac</artifactId>
        <version>${revision}</version>
        <type>ejb</type>
      </dependency>
      <dependency>
        <groupId>${project.groupId}</groupId>
        <artifactId>cpassbe-integ-stilo</artifactId>
        <version>${revision}</version>
        <type>ejb</type>
      </dependency>
      <dependency>
        <groupId>${project.groupId}</groupId>
        <artifactId>cpassbe-integ-notier</artifactId>
        <version>${revision}</version>
        <type>ejb</type>
      </dependency>

      <!-- Define the version of the EJB jar so that we don't need to repeat ourselves in every module -->
      <dependency>
        <groupId>${project.groupId}</groupId>
        <artifactId>cpassbe-ejb</artifactId>
        <version>${revision}</version>
        <type>ejb</type>
      </dependency>
      <!-- Define the version of the WAR so that we don't need to repeat ourselves in every module -->
      <dependency>
        <groupId>${project.groupId}</groupId>
        <artifactId>cpassbe-web</artifactId>
        <version>${revision}</version>
        <type>war</type>
        <scope>compile</scope>
      </dependency>
      <dependency>
        <groupId>${project.groupId}</groupId>
        <artifactId>cpassbe-angular</artifactId>
        <version>${revision}</version>
        <type>war</type>
        <scope>compile</scope>
      </dependency>
      <!-- Define the version of the EAR so that we don't need to repeat ourselves in every module -->
      <dependency>
        <groupId>${project.groupId}</groupId>
        <artifactId>cpassbe-ear</artifactId>
        <version>${revision}</version>
        <type>ear</type>
      </dependency>

      <!-- Project transversal dependencies -->
      <dependency>
        <groupId>com.google.code.gson</groupId>
        <artifactId>gson</artifactId>
        <version>${dependencies.version.gson}</version>
      </dependency>
      <dependency>
        <groupId>com.squareup.okhttp</groupId>
        <artifactId>logging-interceptor</artifactId>
        <version>${dependencies.version.okhttp}</version>
      </dependency>
      <dependency>
        <groupId>com.squareup.okhttp</groupId>
        <artifactId>okhttp</artifactId>
        <version>${dependencies.version.okhttp}</version>
      </dependency>
      <dependency>
        <groupId>io.gsonfire</groupId>
        <artifactId>gson-fire</artifactId>
        <version>${dependencies.version.gson-fire}</version>
      </dependency>
      <dependency>
        <groupId>io.swagger</groupId>
        <artifactId>swagger-annotations</artifactId>
        <version>${dependencies.version.swagger-core}</version>
      </dependency>
      <dependency>
        <groupId>javax</groupId>
        <artifactId>javaee-api</artifactId>
        <version>${dependencies.version.jee}</version>
      </dependency>
      <dependency>
        <groupId>javax</groupId>
        <artifactId>javaee-web-api</artifactId>
        <version>${dependencies.version.jee}</version>
        <scope>provided</scope>
      </dependency>
      <dependency>
        <groupId>javax.cache</groupId>
        <artifactId>cache-api</artifactId>
        <version>${dependencies.version.javax-cache-api}</version>
      </dependency>
      <dependency>
        <groupId>javax.xml.bind</groupId>
        <artifactId>jaxb-api</artifactId>
        <version>${dependencies.version.jaxb-api}</version>
      </dependency>
      <dependency>
        <groupId>javax.xml.ws</groupId>
        <artifactId>jaxws-api</artifactId>
        <version>${dependencies.version.jaxws-api}</version>
        <scope>provided</scope>
      </dependency>
      <dependency>
        <groupId>javax.jws</groupId>
        <artifactId>javax.jws-api</artifactId>
        <version>${dependencies.version.jws-api}</version>
      </dependency>
      <dependency>
        <groupId>joda-time</groupId>
        <artifactId>joda-time</artifactId>
        <version>${dependencies.version.joda-time}</version>
      </dependency>
      <dependency>
        <groupId>org.apache.commons</groupId>
        <artifactId>commons-text</artifactId>
        <version>${dependencies.version.commons-text}</version>
      </dependency>
      <dependency>
        <groupId>commons-lang</groupId>
        <artifactId>commons-lang</artifactId>
        <version>${dependencies.version.commons-lang}</version>
      </dependency>
      <dependency>
        <groupId>org.apache.logging.log4j</groupId>
        <artifactId>log4j-api</artifactId>
        <version>${dependencies.version.log4j}</version>
      </dependency>
      <dependency>
        <groupId>org.apache.logging.log4j</groupId>
        <artifactId>log4j-to-slf4j</artifactId>
        <version>${dependencies.version.log4j}</version>
      </dependency>
      <dependency>
        <groupId>org.jboss.shrinkwrap.resolver</groupId>
        <artifactId>shrinkwrap-resolver-bom</artifactId>
        <version>${dependencies.version.shrinkwrap-resolver-bom}</version>
        <type>pom</type>
      </dependency>
      <dependency>
        <groupId>org.mapstruct</groupId>
        <artifactId>mapstruct</artifactId>
        <version>${dependencies.version.mapstruct}</version>
      </dependency>
      <dependency>
        <groupId>org.postgresql</groupId>
        <artifactId>postgresql</artifactId>
        <version>${dependencies.version.postgresql}</version>
      </dependency>
      <dependency>
        <groupId>org.threeten</groupId>
        <artifactId>threetenbp</artifactId>
        <version>${dependencies.version.threetenbp}</version>
      </dependency>
      <!-- JBoss distributes a complete set of Java EE 8 APIs including
        a Bill of Materials (BOM). A BOM specifies the versions of a "stack" (or
        a collection) of artifacts. We use this here so that we always get the correct
        versions of artifacts. Here we use the wildfly-javaee8-with-tools stack
        (you can read this as the WildFly stack of the Java EE 8 APIs) -->
      <dependency>
        <groupId>org.wildfly.bom</groupId>
        <artifactId>wildfly-javaee8-with-tools</artifactId>
        <version>${dependencies.version.jboss.bom}</version>
        <type>pom</type>
        <scope>import</scope>
      </dependency>
    </dependencies>
  </dependencyManagement>

  <build>
    <pluginManagement>
      <plugins>
        <plugin>
          <groupId>com.sun.xml.ws</groupId>
          <artifactId>jaxws-maven-plugin</artifactId>
          <version>${plugin.version.jaxws}</version>
        </plugin>
        <plugin>
          <groupId>org.apache.cxf</groupId>
          <artifactId>cxf-xjc-plugin</artifactId>
          <version>${plugin.version.xjc}</version>
        </plugin>
        <plugin>
          <groupId>org.apache.maven.plugins</groupId>
          <artifactId>maven-assembly-plugin</artifactId>
          <version>${plugin.version.assembly}</version>
        </plugin>
        <plugin>
          <groupId>org.apache.maven.plugins</groupId>
          <artifactId>maven-clean-plugin</artifactId>
          <version>${plugin.version.clean}</version>
        </plugin>
        <plugin>
          <groupId>org.apache.maven.plugins</groupId>
          <artifactId>maven-compiler-plugin</artifactId>
          <version>${plugin.version.compiler}</version>
        </plugin>
        <plugin>
          <groupId>org.apache.maven.plugins</groupId>
          <artifactId>maven-ear-plugin</artifactId>
          <version>${plugin.version.ear}</version>
        </plugin>
        <plugin>
          <groupId>org.apache.maven.plugins</groupId>
          <artifactId>maven-ejb-plugin</artifactId>
          <version>${plugin.version.ejb}</version>
        </plugin>
        <plugin>
          <groupId>org.apache.maven.plugins</groupId>
          <artifactId>maven-failsafe-plugin</artifactId>
          <version>${plugin.version.failsafe}</version>
        </plugin>
        <plugin>
          <groupId>org.apache.maven.plugins</groupId>
          <artifactId>maven-jar-plugin</artifactId>
          <version>${plugin.version.jar}</version>
        </plugin>
        <plugin>
          <groupId>org.apache.maven.plugins</groupId>
          <artifactId>maven-surefire-plugin</artifactId>
          <version>${plugin.version.surefire}</version>
        </plugin>
        <plugin>
          <groupId>org.apache.maven.plugins</groupId>
          <artifactId>maven-war-plugin</artifactId>
          <version>${plugin.version.war}</version>
        </plugin>
        <plugin>
          <groupId>org.codehaus.mojo</groupId>
          <artifactId>build-helper-maven-plugin</artifactId>
          <version>${plugin.version.build-helper}</version>
        </plugin>
        <plugin>
          <groupId>org.codehaus.mojo</groupId>
          <artifactId>license-maven-plugin</artifactId>
          <version>${plugin.version.license}</version>
        </plugin>
        <plugin>
          <groupId>org.owasp</groupId>
          <artifactId>dependency-check-maven</artifactId>
          <version>${plugin.version.owasp.dependency-check}</version>
        </plugin>
        <!-- The WildFly plugin deploys your ear to a local JBoss AS container -->
        <!-- Due to Maven's lack of intelligence with EARs we need to configure the wildfly maven plugin to skip deployment for all modules. We then enable it specifically in the ear module. -->
        <plugin>
          <groupId>org.wildfly.plugins</groupId>
          <artifactId>wildfly-maven-plugin</artifactId>
          <version>${plugin.version.wildfly.maven}</version>
          <inherited>true</inherited>
          <configuration>
            <skip>true</skip>
          </configuration>
        </plugin>
      </plugins>
    </pluginManagement>
    <plugins>
      <plugin>
        <groupId>org.codehaus.mojo</groupId>
        <artifactId>build-helper-maven-plugin</artifactId>
        <executions>
          <execution>
            <id>add-source</id>
            <phase>generate-sources</phase>
            <goals>
              <goal>add-source</goal>
            </goals>
            <configuration>
              <sources>
                <source>${project.build.directory}/generated-sources/java/</source>
                <source>${project.build.directory}/generated-sources/annotations/</source>
              </sources>
            </configuration>
          </execution>
        </executions>
      </plugin>
    </plugins>
  </build>

  <repositories>
    <repository>
      <snapshots>
        <enabled>false</enabled>
      </snapshots>
      <id>central</id>
      <name>maven2</name>
      <url>${repository.url}</url>
    </repository>
    <repository>
      <snapshots></snapshots>
      <id>snapshots</id>
      <name>maven2</name>
      <url>${repository.url}</url>
    </repository>
  </repositories>

  <pluginRepositories>
    <pluginRepository>
      <snapshots>
        <enabled>false</enabled>
      </snapshots>
      <id>central</id>
      <name>maven2</name>
      <url>${repository.url}</url>
    </pluginRepository>
    <pluginRepository>
      <snapshots></snapshots>
      <id>snapshots</id>
      <name>maven2</name>
      <url>${repository.url}</url>
    </pluginRepository>
  </pluginRepositories>

  <profiles>
    <profile>
      <id>local</id>
      <activation>
        <activeByDefault>true</activeByDefault>
      </activation>
      <properties>
        <build.profile.id>local</build.profile.id>
      </properties>
    </profile>
    <profile>
      <id>dev-cmto-01</id>
      <properties>
        <build.profile.id>dev-cmto-01</build.profile.id>
      </properties>
    </profile>
    <profile>
      <id>dev-int-01</id>
      <properties>
        <build.profile.id>dev-int-01</build.profile.id>
      </properties>
    </profile>
    <profile>
      <id>dev-rp-01</id>
      <properties>
        <build.profile.id>dev-rp-01</build.profile.id>
      </properties>
    </profile>
    <profile>
      <id>test-cmto-01</id>
      <properties>
        <build.profile.id>test-cmto-01</build.profile.id>
      </properties>
    </profile>
    <profile>
      <id>test-int-01</id>
      <properties>
        <build.profile.id>test-int-01</build.profile.id>
      </properties>
    </profile>
    <profile>
      <id>test-rp-01</id>
      <properties>
        <build.profile.id>test-rp-01</build.profile.id>
      </properties>
    </profile>
    <profile>
      <id>prod-int-01</id>
      <properties>
        <build.profile.id>prod-int-01</build.profile.id>
      </properties>
    </profile>
    <profile>
      <id>prod-cmto-01</id>
      <properties>
        <build.profile.id>prod-cmto-01</build.profile.id>
      </properties>
    </profile>
    <profile>
      <id>prod-rp-01</id>
      <properties>
        <build.profile.id>prod-rp-01</build.profile.id>
      </properties>
    </profile>
    <profile>
      <!-- An optional Arquillian testing profile that executes tests in your Wildfly instance. This profile will start a new Wildfly instance, and execute the test, shutting it down when done. Run with: ./mvnw clean verify -Parq-managed -->
      <id>arq-managed</id>
      <dependencies>
        <dependency>
          <groupId>org.wildfly.arquillian</groupId>
          <artifactId>wildfly-arquillian-container-managed</artifactId>
          <scope>test</scope>
        </dependency>
      </dependencies>
      <build>
        <plugins>
          <plugin>
            <groupId>org.apache.maven.plugins</groupId>
            <artifactId>maven-failsafe-plugin</artifactId>
            <executions>
              <execution>
                <goals>
                  <goal>integration-test</goal>
                  <goal>verify</goal>
                </goals>
              </execution>
            </executions>
            <configuration>
              <systemPropertyVariables>
                <arquillian.launch>managed</arquillian.launch>
              </systemPropertyVariables>
            </configuration>
          </plugin>
        </plugins>
      </build>
    </profile>
    <profile>
      <!-- An optional Arquillian testing profile that executes tests in a remote Wildfly instance. Run with: ./mvnw clean verify -Parq-remote -->
      <id>arq-remote</id>
      <dependencies>
        <dependency>
          <groupId>org.wildfly.arquillian</groupId>
          <artifactId>wildfly-arquillian-container-remote</artifactId>
          <scope>test</scope>
        </dependency>
      </dependencies>
      <build>
        <plugins>
          <plugin>
            <groupId>org.apache.maven.plugins</groupId>
            <artifactId>maven-failsafe-plugin</artifactId>
            <executions>
              <execution>
                <goals>
                  <goal>integration-test</goal>
                  <goal>verify</goal>
                </goals>
              </execution>
            </executions>
            <configuration>
              <systemPropertyVariables>
                <arquillian.launch>remote</arquillian.launch>
              </systemPropertyVariables>
            </configuration>
          </plugin>
        </plugins>
      </build>
    </profile>
    <profile>
      <!-- An optional Arquillian testing profile that executes tests in an embedded Wildfly instance. Run with: ./mvnw clean verify -Parq-embedded -->
      <id>arq-embedded</id>
      <dependencies>
        <dependency>
          <groupId>org.wildfly.arquillian</groupId>
          <artifactId>wildfly-arquillian-container-embedded</artifactId>
          <scope>test</scope>
        </dependency>
      </dependencies>
      <build>
        <plugins>
          <plugin>
            <groupId>org.apache.maven.plugins</groupId>
            <artifactId>maven-failsafe-plugin</artifactId>
            <executions>
              <execution>
                <goals>
                  <goal>integration-test</goal>
                  <goal>verify</goal>
                </goals>
              </execution>
            </executions>
            <configuration>
              <systemPropertyVariables>
                <arquillian.launch>embedded</arquillian.launch>
              </systemPropertyVariables>
            </configuration>
          </plugin>
        </plugins>
      </build>
    </profile>
    <!-- Invoke via ./mvnw clean package org.owasp:dependency-check-maven:aggregate -P owasp -->
    <profile>
      <id>owasp</id>
      <activation>
        <activeByDefault>false</activeByDefault>
      </activation>
      <properties>
        <build.profile.id>dev-rp-01</build.profile.id>
      </properties>
      <build>
        <plugins>
          <plugin>
            <groupId>org.owasp</groupId>
            <artifactId>dependency-check-maven</artifactId>
            <executions>
              <execution>
                <goals>
                  <goal>aggregate</goal>
                </goals>
              </execution>
            </executions>
            <configuration>
              <formats>
                <format>XML</format>
                <format>HTML</format>
                <format>CSV</format>
                <format>JSON</format>
              </formats>
            </configuration>
          </plugin>
        </plugins>
      </build>
    </profile>
    <!-- Invoke via ./mvnw clean package -P add-license -->
    <profile>
      <id>add-license</id>
      <activation>
        <activeByDefault>false</activeByDefault>
      </activation>
      <properties>
        <build.profile.id>dev-rp-01</build.profile.id>
      </properties>
      <build>
        <plugins>
          <plugin>
            <groupId>org.codehaus.mojo</groupId>
            <artifactId>build-helper-maven-plugin</artifactId>
            <executions>
              <execution>
                <id>rootlocation</id>
                <phase>validate</phase>
                <goals>
                  <goal>rootlocation</goal>
                </goals>
              </execution>
            </executions>
          </plugin>
          <plugin>
            <groupId>org.codehaus.mojo</groupId>
            <artifactId>license-maven-plugin</artifactId>
            <executions>
              <execution>
                <id>add-licenses</id>
                <goals>
                  <goal>update-file-header</goal>
                </goals>
                <phase>process-sources</phase>
              </execution>
            </executions>
            <configuration>
              <addJavaLicenseAfterPackage>false</addJavaLicenseAfterPackage>
              <canUpdateLicense>false</canUpdateLicense>
              <licenseName>eupl-1.2</licenseName>
              <licenseResolver>file:///${rootlocation}/docs/license</licenseResolver>
              <processStartTag>========================LICENSE_START=================================</processStartTag>
              <processEndTag>=========================LICENSE_END==================================</processEndTag>
              <roots>
                <root>src</root>
                <root>profiles</root>
              </roots>
              <excludes>
                <exclude>main/angular/**/*</exclude>
                <exclude>main/java/it/csi/siac/**/*</exclude>
                <exclude>main/java/it/eng/auriga/**/*</exclude>
              </excludes>
            </configuration>
          </plugin>
        </plugins>
      </build>
    </profile>
    <!-- Invoke via ./mvnw clean package bom-builder:build-bom -Pgenerate-bom -->
    <profile>
      <id>generate-bom</id>
      <activation>
        <activeByDefault>false</activeByDefault>
      </activation>
      <properties>
        <build.profile.id>dev-rp-01</build.profile.id>
      </properties>
      <build>
        <plugins>
          <plugin>
            <groupId>org.jboss.maven.plugins</groupId>
            <artifactId>bom-builder-maven-plugin</artifactId>
            <version>${plugin.version.bom-builder}</version>
            <executions>
              <execution>
                <id>build-bom</id>
                <goals>
                  <goal>build-bom</goal>
                </goals>
              </execution>
            </executions>
            <configuration>
              <bomGroupId>${project.groupId}</bomGroupId>
              <bomArtifactId>${project.artifactId}-bom</bomArtifactId>
              <bomVersion>${revision}</bomVersion>
              <bomDescription>${project.description}</bomDescription>
              <bomName>${project.name}</bomName>
              <outputFilename>${project.artifactId}.bom-pom.xml</outputFilename>
            </configuration>
          </plugin>
        </plugins>
      </build>
    </profile>
    <!-- Invoke via ./mvnw clean package -Pgenerate-adapters -->
    <profile>
      <id>generate-adapters</id>
      <properties>
        <build.profile.id>dev-rp-01</build.profile.id>
      </properties>
    </profile>

  </profiles>

</project>
